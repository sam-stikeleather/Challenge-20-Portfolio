{"ast":null,"code":"var _jsxFileName = \"/Users/samuelstikeleather/Desktop/BootCamp/Workspace/UNCC-VIRT-FSF-FT-05-2023-U-LOLC/20-React/01-Activities/00-practice-app/src/components/Counter.js\",\n  _s = $RefreshSig$();\n// First we import `useState` with React so that we can take advantage of the hook\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Counter() {\n  _s();\n  // To set a state variable using `useState`, we give our variable a name of `count`.\n  // We also set the name of the function that will update `count`. We called it `setCount`.\n  // useState accepts only one argument - the initial value of the state variable.\n  let [count, setCount] = useState(0);\n\n  // This is a handler that we will reference in our `onClick` attribute later\n  const handleClick = () => {\n    setCount(count + 1);\n    console.log(`New value of count: ${count}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header bg-primary text-white\",\n      children: \"Click Counter!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Click Count: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"button\",\n        onClick: handleClick,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Counter","_s","count","setCount","handleClick","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/samuelstikeleather/Desktop/BootCamp/Workspace/UNCC-VIRT-FSF-FT-05-2023-U-LOLC/20-React/01-Activities/00-practice-app/src/components/Counter.js"],"sourcesContent":["// First we import `useState` with React so that we can take advantage of the hook\nimport React, { useState } from 'react';\n\nexport default function Counter() {\n  // To set a state variable using `useState`, we give our variable a name of `count`.\n  // We also set the name of the function that will update `count`. We called it `setCount`.\n  // useState accepts only one argument - the initial value of the state variable.\n  let [count, setCount] = useState(0);\n\n  // This is a handler that we will reference in our `onClick` attribute later\n  const handleClick = () => {\n    setCount((count + 1));\n    console.log(`New value of count: ${count}`);\n  };\n\n  return (\n    <div className=\"card text-center\">\n      <div className=\"card-header bg-primary text-white\">Click Counter!</div>\n      <div className=\"card-body\">\n        <p className=\"card-text\">Click Count: {count}</p>\n        {/* In our button element, we add a onClick event that invokes our handleClick method */}\n        <button className=\"btn btn-primary\" type=\"button\" onClick={handleClick}>\n          Increment\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC;EACA;EACA;EACA,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;;EAEnC;EACA,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAAED,KAAK,GAAG,CAAE,CAAC;IACrBG,OAAO,CAACC,GAAG,CAAE,uBAAsBJ,KAAM,EAAC,CAAC;EAC7C,CAAC;EAED,oBACEH,OAAA;IAAKQ,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BT,OAAA;MAAKQ,SAAS,EAAC,mCAAmC;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvEb,OAAA;MAAKQ,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBT,OAAA;QAAGQ,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAC,eAAa,EAACN,KAAK;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEjDb,OAAA;QAAQQ,SAAS,EAAC,iBAAiB;QAACM,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEV,WAAY;QAAAI,QAAA,EAAC;MAExE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CAxBuBD,OAAO;AAAAe,EAAA,GAAPf,OAAO;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}