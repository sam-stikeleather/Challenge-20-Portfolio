{"ast":null,"code":"var _jsxFileName = \"/Users/samuelstikeleather/Desktop/BootCamp/Workspace/UNCC-VIRT-FSF-FT-05-2023-U-LOLC/20-React/01-Activities/00-practice-app/src/components/List.js\";\nimport React from 'react';\n\n// This List component accepts props from App.js\n// We pluck off the \"users\" property of the props object using destructuring assignment\n// This prevents us from having to type `props.users` each time we want to refer to the users object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List({\n  users\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Random Users:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: `${user.name.first} ${user.name.last} (${user.login.username})`\n      }, user.login.uuid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","List","users","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","name","first","last","login","username","uuid","_c","$RefreshReg$"],"sources":["/Users/samuelstikeleather/Desktop/BootCamp/Workspace/UNCC-VIRT-FSF-FT-05-2023-U-LOLC/20-React/01-Activities/00-practice-app/src/components/List.js"],"sourcesContent":["import React from 'react';\n\n// This List component accepts props from App.js\n// We pluck off the \"users\" property of the props object using destructuring assignment\n// This prevents us from having to type `props.users` each time we want to refer to the users object\nexport default function List({ users }) {\n  return (\n    <div className=\"container\">\n      <h1>Random Users:</h1>\n      <ul className=\"list-group\">\n        {/* Here we use the map method to iterate through each user and return a new array of list items for each user */}\n        {users.map((user) => (\n          <li className=\"list-group-item\" key={user.login.uuid}>\n            {`${user.name.first} ${user.name.last} (${user.login.username})`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,IAAIA,CAAC;EAAEC;AAAM,CAAC,EAAE;EACtC,oBACEF,OAAA;IAAKG,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBJ,OAAA;MAAAI,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBR,OAAA;MAAIG,SAAS,EAAC,YAAY;MAAAC,QAAA,EAEvBF,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACdV,OAAA;QAAIG,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3B,GAAEM,IAAI,CAACC,IAAI,CAACC,KAAM,IAAGF,IAAI,CAACC,IAAI,CAACE,IAAK,KAAIH,IAAI,CAACI,KAAK,CAACC,QAAS;MAAE,GAD7BL,IAAI,CAACI,KAAK,CAACE,IAAI;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhD,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACS,EAAA,GAduBhB,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}